name: modify_feature_comment
run-name: Modify the AI-generated feature based on user's feedback

on:
  issue_comment:
    types:
      - created
jobs:
  comment-response:
    if: contains(github.event.issue.labels.*.name, 'in progress') && (contains(github.event.issue.labels.*.name, 'bug') || contains(github.event.issue.labels.*.name, 'feature'))
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: write
      pull-requests: write
    env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
          NUMBER: ${{ github.event.issue.number }}
          ISSUE_BODY: ${{ github.event.issue.body }}
          COMMENT_BODY: ${{ github.event.comment.body }}
          URL: ${{ github.event.issue.url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository }}
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Fetch comments and find branch name
        id: find_branch_name
        run: |
          comments=$(gh api repos/$GH_REPO/issues/$NUMBER/comments)
          output=$(python .sidmd/find_branch_name.py "$comments" )
          echo "branch_name=$output" >> "$GITHUB_OUTPUT"
          
      - name: Switch to the new branch
        run: |
          git fetch
          git switch ${{ steps.find_branch_name.outputs.branch_name }}

      - name: Extract file path from issue body
        id: extract-path
        run: |
          # Extract the first line
          first_line=$(echo "$ISSUE_BODY" | head -n 1)
          # Extract the value inside the single quotes
          file_path=$(echo "$first_line" | sed -E "s/path: '([^']+)'/\\1/")
          echo "file_path=$file_path" >> "$GITHUB_OUTPUT"

      - name: Map the files
        id: map-files
        run: |
          output=$(python .sidmd/file_crawler.py --path '${{ steps.extract-path.outputs.file_path }}' )
          echo "output: $output"
          encoded_output=$(echo "$output" | base64 -w 0)
          echo "file_structure=$encoded_output" >> "$GITHUB_OUTPUT"

      - name: Install dependencies
        run: |
          chmod +x .sidmd/install_dependencies.sh
          .sidmd/install_dependencies.sh 
          
      - name: Run AI query
        id: run-ai
        run: |
          file_structure=$(echo '${{ steps.map-files.outputs.file_structure }}' | base64 -d)
          sanitized_comment_body=$(echo "$COMMENT_BODY" | sed 's/"/\\"/g; s/!/\\!/g; s/\$/\\\$/g')
          output=$(python .sidmd/generate_code.py 'feature' "$sanitized_comment_body" "$file_structure")
          touch generated_script.json
          echo "$output" > generated_script.json
        env:
          AI_API_KEY: ${{ secrets.AI_API_KEY }}

      - name: Write into the repository
        id: write-to-repository
        run: |
          echo "$(<generated_script.json)"
          python .sidmd/write_changes.py --structure 'generated_script.json'
          rm generated_script.json
          
          
      - name: Commit and push changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Comment-based change"
          git push

      - name: Handle failure
        if: failure()
        run: |
          BODY="The workflow could not be completed, changes from the comment have not been implemented. Please try again. To find out more about the error, see workflow run at ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          gh issue comment "$NUMBER" --body "$BODY"

      - name: Post a comment
        if: success()
        run: |
          BODY="The code has been successfully updated according to the instructions provided in the comment. Please review the changes in the latest commit of branch  ${{ github.server_url }}/${{ github.repository }}/tree/${{ steps.find_branch_name.outputs.branch_name }}"
          gh issue comment "$NUMBER" --body "$BODY"
